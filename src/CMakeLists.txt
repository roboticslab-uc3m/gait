# Generated by "yarp cmake" & co

cmake_minimum_required(VERSION 2.6)

IF (ENABLE_Gait)

set(KEYWORD "Gait")

#-- Not doing because requires cmake 3.1 [source of original code](https://crascit.com/2015/03/28/enabling-cxx11-in-cmake/):
#set(CMAKE_CXX_STANDARD 11)
#set(CMAKE_CXX_STANDARD_REQUIRED ON)
#-- Not doing because requires gcc/g++ 4.7 and higher. [source of original code](http://stackoverflow.com/questions/20826135/passing-std-c11-to-cmakelists):
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
#-- Lower than gcc/g++, as travis uses 4.6.3 [source of original code](https://github.com/travis-ci/travis-ci/issues/4634):
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")

# Search for source code.
file(GLOB folder_source *.cpp *.cc *.c)
file(GLOB folder_header *.h)
source_group("Source Files" FILES ${folder_source})
source_group("Header Files" FILES ${folder_header})

# Automatically add include directories if needed.
foreach(header_file ${folder_header})
  get_filename_component(p ${header_file} PATH)
  include_directories(${p})
endforeach(header_file ${folder_header})

include_directories(${GAIT_INCLUDE_DIRS})

link_directories(${GAIT_LINK_DIRS})

# Set up our main executable.
if (folder_source)
  add_library(${KEYWORD} ${folder_source} ${folder_header})
  target_link_libraries(${KEYWORD})
  install(TARGETS ${KEYWORD} DESTINATION lib)
else (folder_source)
  message(FATAL_ERROR "No source code files found. Please add something")
endif (folder_source)

  # Exporting dependencies for GAITConfig.cmake quite manually for now...
  set(GAIT_DEFINES ${GAIT_DEFINES} -std=c++0x CACHE INTERNAL "appended defines")
  set(GAIT_INCLUDE_DIRS ${GAIT_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "appended libraries")
  set(GAIT_LIBRARIES ${GAIT_LIBRARIES} Gait CACHE INTERNAL "appended libraries")

ENDIF (ENABLE_Gait)

